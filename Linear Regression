from warnings import filterwarnings
filterwarnings('ignore')

import pandas as pd
ad = pd.read_csv("Advertising.csv", usecols = [1,2,3,4])
df = ad.copy()
df.head()

df.head()
df.info()
df.describe().T
df.isnull().values.any()
df.corr()

import seaborn as sns
sns.pairplot(df, kind  ="reg");

sns.jointplot(x = "TV", y = "Sales", data = df, kind = "reg")


# Modeling with Statsmodels

import statsmodels.api as sm

X = df[["TV"]]
X[0:5]

X = sm.add_constant(X)
X[0:5]
y = df["sales"]
y[0:5]

lm = sm.OLS(y,X)

model = lm.fit()
model.summary()

import statsmodels.formula.api as smf
lm = smf.ols("sales ~ TV", df)
model = lm.fit()
model.summary()

model.params

model.summary().tables[1]

model.conf_int()
model.f_pvalue

print("f_pvalue: ", "%.4f" % model.f_pvalue)
print("fvalue: ", "%.2f" % model.fvalue)
print("tvalue: ", "%.2f" % model.tvalues[0:1])

model.rsquared_adj

model.fittedvalues[0:5]

y[0:5]

print("Sales = " +  str("%.2f" % model.params[0]) + " + TV" + "*" + str("%.2f" % model.params[1]))


g = sns.regplot(df["TV"], df["sales"], ci=None, scatter_kws={'color':'r', 's':9})
g.set_title("Model Denklemi: Sales = 7.03 + TV*0.05")
g.set_ylabel("Satış Sayısı")
g.set_xlabel("TV Harcamaları")
import matplotlib.pyplot as plt
plt.xlim(-10,310)
plt.ylim(bottom=0);



from sklearn.linear_model import LinearRegression


X = df[["TV"]]
y = df["sales"]
reg = LinearRegression()
model = reg.fit(X, y)
model.intercept_
model.coef_

model.score(X,y)

model.predict(X)[0:10]


# Predict
7.03 + 30*0.04

X = df[["TV"]]
y = df["sales"]
reg = LinearRegression()
model = reg.fit(X, y)

model.predict([[30]])

yeni_veri = [[5],[90],[200]]

model.predict(yeni_veri)













































































